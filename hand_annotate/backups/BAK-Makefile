CC = g++

# define any compile-time flags
CFLAGS = `pkg-config --cflags --libs MagickWand` 

# define any directories containing header files other than /usr/include
INCLUDES = 

# define library paths in addition to /usr/lib
#   if I wanted to include libraries not in /usr/lib I'd specify
#   their path using -Lpath, something like:
LFLAGS = 

# define any libraries to link into executable:
#   if I want to link in libraries (libx.so or libx.a) I use the -llibname 
#   option, something like (this will link in libmylib.so and libm.so:
LIBS = -L/usr/local/pgsql/lib -lpq -lm `pkg-config --libs MagickWand` -Wno-deprecated `pkg-config --cflags --libs opencv` `pkg-config --cflags --libs libavformat libswscale`



# define the C source files
SRCS = hand_annotate.c stasm/asm.cpp stasm/convshape.cpp stasm/eyedet.cpp stasm/faceroi.cpp stasm/hatdesc.cpp stasm/misc.cpp stasm/print.cpp stasm/shapehacks.cpp stasm/startshape.cpp stasm/stasm_lib.cpp stasm/classicdesc.cpp stasm/err.cpp stasm/eyedist.cpp stasm/hat.cpp stasm/landmarks.cpp stasm/pinstart.cpp stasm/shape17.cpp stasm/shapemod.cpp stasm/stasm.cpp stasm/MOD_1/facedet.cpp stasm/MOD_1/initasm.cpp

# define the C object files 
#
# This uses Suffix Replacement within a macro:
#   $(name:string1=string2)
#         For each word in 'name' replace 'string1' with 'string2'
# Below we are replacing the suffix .c of all words in the macro SRCS
# with the .o suffix
#
OBJS = $(SRCS:.c=.o)

# define the executable file 
MAIN = hand_annotate

#
# The following part of the makefile is generic; it can be used to 
# build any executable just by changing the definitions above and by
# deleting dependencies appended to the file from 'make depend'
#

.PHONY: depend clean

$(MAIN): $(OBJS) 
	$(CC) $(CFLAGS) $(INCLUDES) -o $(MAIN) $(OBJS) $(LFLAGS) $(LIBS)

# this is a suffix replacement rule for building .o's from .c's
# it uses automatic variables $<: the name of the prerequisite of
# the rule(a .c file) and $@: the name of the target of the rule (a .o file) 
# (see the gnu make manual section about automatic variables)
.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $<  -o $@

clean:
	$(RM) *.o *~ $(MAIN)

depend: $(SRCS)
	makedepend $(INCLUDES) $^

# DO NOT DELETE THIS LINE -- make depend needs it
